function [ Confusion,...
    Accuracy,...
    Probablity_estimates,...
    Training_model,...
    Final_decision ,...
    Actual_answer  ]...
    = ML_TwoClassLibSVM( DATA,TESTIDX,TRAINIDX,G,GN,VERBOSE )




svmModel = cell(1,1);
predictions = zeros(sum(TESTIDX),numel(svmModel)); %# store binary predictions

Training_model{k} = train( G(TRAINIDX), sparse(DATA(TRAINIDX,:)));
[predictions(:,k), Accuracy, Probablity_estimates] =  predict(G(idx), sparse(DATA(TESTIDX,:)), svmModel{k});
Accuracy = Accuracy(1);
GG = G;
uG = unique(G);



GG(find(G == uG(2) )) = -1;
GG(find(G == uG(1) )) = 1; 
[X,Y,~,AUC] = perfcurve(GG(idx),Probablity_estimates,1);
AUC

Final_decision = mode(predictions,2);   %# votipredng: clasify as the class receiving most votes
Final_decision = Final_decision - 1;
Actual_answer = G - 1;    %Gotta minus one to fit the confusion range

Confusion = confusionmat(Final_decision, Actual_answer(TESTIDX));
[~,~,~,~,Accuracy,~] = ...
    MISC_PlotConfusion(Confusion,[1,2],0);

if VERBOSE
    disp(Confusion);
end
disp(['Accuracy : ',num2str(Accuracy * 100)]);

end




